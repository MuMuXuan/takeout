apply plugin: 'com.android.application'
// 需要在MVP的module中使用apt
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.it520.takeout"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile rootProject.ext.dependencies.SupportV7

    // Dagger2依赖
    compile rootProject.ext.dependencies.Dagger2
    // 使用apt插件为Dagger2生成代码
    apt rootProject.ext.dependencies.DaggerCompiler
    // Butterknife依赖
    compile rootProject.ext.dependencies.Butterknife
    // 添加Retrofit依赖
    compile rootProject.ext.dependencies.Retrofit
    // 使用Gson进行数据解析
    compile rootProject.ext.dependencies.Gson
    // 将Retorfit与Gson关联
    compile rootProject.ext.dependencies.RetorfitConvertGson
    // 添加OrmLite依赖
    compile rootProject.ext.dependencies.OrmLite
    // RecyclerView引入
    compile rootProject.ext.dependencies.RecyclerView
}
